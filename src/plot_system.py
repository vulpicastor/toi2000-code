#!/usr/bin/env python
import numpy as np
import scipy as sp
import matplotlib
from matplotlib import pyplot as plt
import pandas as pds
from matplotlib import cm
from matplotlib.colors import ListedColormap
# from palettable import cubehelix

plt.rcParams['font.sans-serif'] = ['TeX Gyre Heros', 'Helvetica', 'Arial', 'sans-serif']
plt.rcParams['mathtext.fontset'] = 'stixsans'

for p in matplotlib.font_manager.findSystemFonts(fontpaths=[
    '/usr/share/texmf/fonts/opentype/', '/usr/share/fonts/opentype']):
    matplotlib.font_manager.fontManager.addfont(p)

cm_type = "linear"

cm_data = [[0.41948017,0.01256451,0.00314057],
           [0.41993335,0.02626318,0.00501422],
           [0.42044683,0.03995712,0.0070003 ],
           [0.42096297,0.05234961,0.01039828],
           [0.42168315,0.0622857 ,0.01672445],
           [0.423135  ,0.06931158,0.02552438],
           [0.42530384,0.0742022 ,0.03560818],
           [0.42837418,0.07690289,0.04587217],
           [0.43306451,0.07608299,0.05357033],
           [0.4390891 ,0.07239758,0.05756939],
           [0.44548739,0.06765776,0.05988766],
           [0.45204389,0.06215361,0.06129991],
           [0.45870569,0.05584082,0.06202905],
           [0.46543115,0.04861783,0.0622474 ],
           [0.47215389,0.04061152,0.06116358],
           [0.47867198,0.03304874,0.05748278],
           [0.48453004,0.02839501,0.05160211],
           [0.48965893,0.026821  ,0.04456461],
           [0.49425797,0.02746252,0.03691118],
           [0.4984319 ,0.02989365,0.02949013],
           [0.5021089 ,0.03445948,0.02265061],
           [0.50515732,0.04172669,0.01661576],
           [0.50753379,0.0509822 ,0.01166669],
           [0.50925452,0.06139536,0.00804352],
           [0.51048658,0.07209224,0.00565403],
           [0.51134238,0.08267329,0.00439838],
           [0.51195436,0.09284479,0.0041219 ],
           [0.51231875,0.10269347,0.00492899],
           [0.51246238,0.11221208,0.00701506],
           [0.51243642,0.12135914,0.01046818],
           [0.5122963 ,0.13010069,0.01532872],
           [0.51208745,0.13842833,0.02162523],
           [0.51183747,0.14636352,0.02937345],
           [0.51163188,0.15383133,0.03866383],
           [0.5114957 ,0.16084179,0.04915673],
           [0.5115131 ,0.16732605,0.06001079],
           [0.51179858,0.17318758,0.07114899],
           [0.5124729 ,0.17833617,0.08240749],
           [0.51357663,0.18279437,0.09354195],
           [0.51512488,0.1866022 ,0.10441563],
           [0.51703998,0.18990605,0.11487498],
           [0.51933954,0.19270701,0.12497575],
           [0.52215519,0.19487812,0.13458317],
           [0.52557994,0.19633692,0.14355048],
           [0.52969653,0.19701114,0.15166145],
           [0.53450667,0.19690952,0.15875784],
           [0.53984784,0.19620655,0.16494299],
           [0.54560474,0.19501482,0.17033288],
           [0.55173969,0.19336049,0.17492572],
           [0.55816114,0.19132657,0.17883284],
           [0.56484124,0.18892345,0.18208182],
           [0.57171256,0.18620685,0.18478031],
           [0.57873501,0.18320223,0.18700201],
           [0.58587494,0.17992555,0.18883918],
           [0.59312023,0.17637102,0.19030952],
           [0.60045868,0.17253287,0.19142391],
           [0.60787866,0.16840313,0.19219458],
           [0.6153694 ,0.16397092,0.19263473],
           [0.62292102,0.15922166,0.19275807],
           [0.63052475,0.15413614,0.19257855],
           [0.63817126,0.14869076,0.19212115],
           [0.64585115,0.14285376,0.19143258],
           [0.65356442,0.13657561,0.19050106],
           [0.66130613,0.1298069 ,0.18931264],
           [0.66907089,0.12248582,0.18785307],
           [0.67685291,0.11453295,0.18610781],
           [0.68464561,0.10584377,0.18406243],
           [0.69244127,0.09627653,0.18170322],
           [0.70021596,0.08571901,0.17889605],
           [0.70783851,0.07457885,0.17513322],
           [0.71519938,0.06324193,0.17038613],
           [0.72219983,0.05225443,0.16476159],
           [0.72875652,0.04242769,0.15840779],
           [0.73484715,0.03471524,0.15151601],
           [0.74050637,0.02994537,0.14425655],
           [0.74579548,0.02776922,0.13672405],
           [0.75085364,0.02721007,0.12895244],
           [0.75569866,0.02816856,0.12093681],
           [0.76032542,0.03071157,0.11266661],
           [0.76473175,0.03488519,0.10412215],
           [0.76891841,0.04070889,0.09527012],
           [0.772889  ,0.04768312,0.08605718],
           [0.77664963,0.05537862,0.07640051],
           [0.780204  ,0.06359179,0.06615519],
           [0.7832809 ,0.07348569,0.05567318],
           [0.78577765,0.08500674,0.04526461],
           [0.7877204 ,0.09753644,0.03528727],
           [0.78917364,0.11051627,0.02697926],
           [0.79021883,0.12353466,0.02044403],
           [0.79092873,0.13635024,0.01551983],
           [0.79134475,0.14888655,0.01206872],
           [0.79157255,0.16094341,0.00977712],
           [0.79158441,0.17266871,0.00868039],
           [0.79149437,0.18389328,0.00825902],
           [0.79134603,0.19462399,0.00816836],
           [0.79112745,0.20495706,0.00841742],
           [0.79086026,0.21490941,0.008958  ],
           [0.79054511,0.22452927,0.00978159],
           [0.79018252,0.23385601,0.01088114],
           [0.78976737,0.2429308 ,0.01225858],
           [0.78930254,0.25177603,0.01391089],
           [0.78879428,0.26040608,0.01582088],
           [0.78824216,0.26884227,0.01798539],
           [0.78764917,0.27709817,0.02040238],
           [0.7870142 ,0.28519103,0.0230696 ],
           [0.78633852,0.29313277,0.02598554],
           [0.78562159,0.30093614,0.02914893],
           [0.78485207,0.30862583,0.032541  ],
           [0.78405093,0.31618665,0.03611039],
           [0.7832142 ,0.32363214,0.03986429],
           [0.78234318,0.33096861,0.04367689],
           [0.7814359 ,0.33820518,0.04746522],
           [0.78049258,0.34534783,0.0512433 ],
           [0.77951173,0.3524037 ,0.05501723],
           [0.77849348,0.35937762,0.05879227],
           [0.77743576,0.36627615,0.06257348],
           [0.77633942,0.37310249,0.06636509],
           [0.7752016 ,0.37986302,0.07017159],
           [0.77402296,0.38656036,0.07399661],
           [0.77280239,0.3931985 ,0.07784384],
           [0.77153759,0.39978214,0.08171708],
           [0.77022901,0.40631326,0.08561938],
           [0.76887707,0.41279371,0.08955362],
           [0.76746118,0.41923676,0.09371239],
           [0.76596165,0.42565545,0.0982096 ],
           [0.76437971,0.43204896,0.10302341],
           [0.76271667,0.43841646,0.10813239],
           [0.76097253,0.44475773,0.11352998],
           [0.75914882,0.45107198,0.11919077],
           [0.75724903,0.45735727,0.12508557],
           [0.75527605,0.46361195,0.13119669],
           [0.7532306 ,0.46983594,0.13750927],
           [0.75111458,0.4760284 ,0.14400903],
           [0.7489312 ,0.48218771,0.15068192],
           [0.74668085,0.48831415,0.15751725],
           [0.74436674,0.49440626,0.1645032 ],
           [0.74199038,0.5004637 ,0.17163024],
           [0.73955416,0.50648567,0.17888907],
           [0.73706184,0.5124691 ,0.18630673],
           [0.73451017,0.51841515,0.19391078],
           [0.73190483,0.52432143,0.20168275],
           [0.72924836,0.53018745,0.20960841],
           [0.72654418,0.53601231,0.21767403],
           [0.72379812,0.54179397,0.22586465],
           [0.72101062,0.54753329,0.23417166],
           [0.71818676,0.55322879,0.2425828 ],
           [0.71533142,0.55887926,0.25108674],
           [0.71244571,0.56448537,0.25967682],
           [0.70952389,0.57004979,0.26837694],
           [0.70657864,0.57556869,0.2771497 ],
           [0.70361474,0.58104129,0.28598499],
           [0.70063379,0.58646821,0.29487788],
           [0.69763944,0.59184917,0.3038217 ],
           [0.6946356 ,0.59718388,0.3128099 ],
           [0.69162453,0.60247254,0.321842  ],
           [0.68859867,0.60771791,0.33095118],
           [0.6855893 ,0.61290573,0.34015633],
           [0.6826025 ,0.61803541,0.34944685],
           [0.67964438,0.62310663,0.35880957],
           [0.6767172 ,0.62811935,0.36825626],
           [0.67382016,0.63307365,0.37781591],
           [0.67096902,0.63796908,0.38741391],
           [0.66816858,0.64280613,0.3970402 ],
           [0.66542106,0.64758464,0.40671186],
           [0.66272927,0.65230343,0.41645642],
           [0.66010452,0.65696465,0.42619985],
           [0.65755204,0.66156888,0.43593234],
           [0.65506567,0.66611522,0.44573007],
           [0.65266367,0.67060386,0.45551402],
           [0.65034986,0.67503717,0.46525869],
           [0.64811904,0.67941447,0.47502863],
           [0.64598337,0.68373629,0.4847788 ],
           [0.64395006,0.68800545,0.49446143],
           [0.64201114,0.69222096,0.504155  ],
           [0.64018157,0.69638424,0.51379268],
           [0.63846005,0.70050017,0.5233414 ],
           [0.6368429 ,0.70456409,0.53290234],
           [0.63533673,0.70858408,0.5423627 ],
           [0.63390149,0.71256876,0.55180761],
           [0.63259606,0.7165048 ,0.56117079],
           [0.63137381,0.72040935,0.57045383],
           [0.63027952,0.72426921,0.57965384],
           [0.62929165,0.72809349,0.58876499],
           [0.62838104,0.73189244,0.59779455],
           [0.62761099,0.73564784,0.6067304 ],
           [0.6269217 ,0.73937967,0.6155796 ],
           [0.62629794,0.74309317,0.62434932],
           [0.62580643,0.74676926,0.63302815],
           [0.62537495,0.75043072,0.64162794],
           [0.62499384,0.7540807 ,0.65015557],
           [0.62471819,0.75770321,0.65860776],
           [0.62449211,0.76131543,0.66699455],
           [0.62430097,0.76492176,0.67532281],
           [0.62417404,0.76851331,0.68359861],
           [0.62410235,0.77209283,0.6918283 ],
           [0.62405166,0.7756702 ,0.70002123],
           [0.62401818,0.7792461 ,0.7081858 ],
           [0.62405874,0.78280394,0.71632348],
           [0.62411822,0.78635916,0.72444783],
           [0.62418949,0.78991322,0.73256809],
           [0.62427311,0.79346552,0.74069109],
           [0.62442003,0.79700085,0.74882428],
           [0.62469287,0.80049952,0.7569898 ],
           [0.62509397,0.8039612 ,0.76519047],
           [0.62564027,0.80738165,0.77342613],
           [0.62635438,0.81075531,0.78169434],
           [0.62733214,0.81405699,0.78998247],
           [0.62850421,0.81730648,0.7982956 ],
           [0.62988631,0.82050043,0.80662802],
           [0.63149233,0.823636  ,0.81497382],
           [0.63333436,0.82671096,0.82332546],
           [0.63542183,0.82972377,0.8316752 ],
           [0.6378368 ,0.83265376,0.84000266],
           [0.64051016,0.83552006,0.84831096],
           [0.64344009,0.83832386,0.85659304],
           [0.64662416,0.8410664 ,0.86484217],
           [0.65005694,0.84374958,0.87305242],
           [0.65373029,0.84637588,0.88121901],
           [0.65769386,0.84893258,0.88932513],
           [0.66190622,0.85143056,0.89737311],
           [0.66633029,0.85387701,0.90538831],
           [0.67100852,0.85625368,0.91341947],
           [0.67599327,0.85855736,0.9213493 ],
           [0.68134894,0.86077443,0.92912057],
           [0.68714516,0.86289039,0.9366654 ],
           [0.69345533,0.86489022,0.94390415],
           [0.70033913,0.86676468,0.95073345],
           [0.70783766,0.86851018,0.95704105],
           [0.7159551 ,0.8701338 ,0.96271181],
           [0.72464204,0.87165699,0.96764477],
           [0.73379432,0.87311425,0.97177695],
           [0.7433469 ,0.87453524,0.97499016],
           [0.75306662,0.87597089,0.97745765],
           [0.76282321,0.87745076,0.97927871],
           [0.77251334,0.87899641,0.98056278],
           [0.78211527,0.88060616,0.98139723],
           [0.79166777,0.88224469,0.98198245],
           [0.80104513,0.88392894,0.98255436],
           [0.8102571 ,0.88565835,0.9831099 ],
           [0.81930897,0.88743347,0.98364784],
           [0.82820509,0.88925505,0.98416719],
           [0.83695346,0.89112265,0.98466467],
           [0.84555834,0.89303684,0.98513872],
           [0.85402055,0.89499952,0.98558597],
           [0.86233684,0.89701446,0.98599984],
           [0.87052071,0.89907805,0.98638273],
           [0.87857517,0.90119093,0.98673278],
           [0.88650317,0.90335369,0.98704806],
           [0.89430015,0.90557031,0.9873215 ],
           [0.9019653 ,0.90784383,0.98754194],
           [0.90960309,0.91013258,0.98772666],
           [0.91717297,0.91243538,0.98803068],
           [0.92472221,0.91473713,0.98842888],
           [0.93222849,0.91704357,0.98895356],
           [0.93973666,0.91933952,0.98958465],
           [0.94751737,0.92153516,0.99014403]]
my_cm = ListedColormap(cm_data, name="astro_rainbow")


def adjust_lightness(color, amount=0.5):
    import matplotlib.colors as mc
    import colorsys
    #try:
    #    c = mc.cnames[color]
    #except:
    #    c = color
    c = colorsys.rgb_to_hls(color[0],color[1],color[2])
    return colorsys.hls_to_rgb(c[0], max(0, min(1, amount * c[1])), c[2])

JUPITER_RADIUS_IN_EARTH_RADIUS = 714920. / 63781

def main():
    #infile="KepHJtable_multi.txt"
    infile = "../data/toi_2000_table_A1-Copy1.csv"
    starfile = pds.read_csv("../data/Gianthosts.csv", index_col=False)
    data=pds.read_csv(infile, index_col=False)
    print(data.head())
    data['pl_radj'] = data['pl_rade'] / JUPITER_RADIUS_IN_EARTH_RADIUS
    from matplotlib import gridspec
    #3.5 inch
    figure = plt.figure(figsize=[3.75,8.5])
    gs1 = gridspec.GridSpec(26, 3)
    gs1.update(left=0.2, right=0.96, top=0.95, wspace=0.05, hspace=0.0)
    ax1 =  plt.subplot(gs1[1:,:])

    # ch_cmap = cubehelix.Cubehelix.make(
    # start_hue=180,
    # end_hue=-100,
    # min_sat=2.5,
    # max_sat=0.1,
    # min_light=0.2,
    # max_light=0.9,
    # n=16,
    # name='spectral_cubehelix',
    # )
    # ch_cmap.show_continuous_image()

    # print(ch_cmap)
    #exit()
    #figure = plt.figure()
    #ax1 = figure.add_subplot(111)
    #ax2 = figure.add_subplot(212)
    teff = np.array(starfile.st_teff) 
    rad = np.array(starfile.st_rad) 
    threshold = 6./11.21
    hjup = (data.pl_radj>threshold)*(data.pl_orbper<10)
    wjup = (data.pl_radj>threshold)*(data.pl_orbper>10)
    small = data.pl_radj<=threshold
    candidate = data.disposition == 'candidate'
    not_candidate = np.logical_not(candidate)
    mymap = plt.get_cmap('plasma_r')
    tmin = 4000.
    tmax = 7200.
    ax1.tick_params(axis="y",direction="in")
    ax1.tick_params(axis="x",which="both",direction="in", top=True, bottom=True)
    ps = 200
    
    norm = matplotlib.colors.Normalize(vmin=4000, vmax=7000)
    nsys = len(starfile.star_id) 
    newcmap = my_cm
    for i in range(nsys):
        index = data.star_id==(i)
        print(i, list(data.pl_name[index]))
        # small_mask = np.logical_and(index, small)
        # ax1.scatter(data.pl_orbper[small_mask],data.star_id[small_mask],s=data.pl_radj[small_mask]**2.*ps, alpha=1, color='0.4', edgecolor='none')
        # ax1.scatter(data.pl_orbper[index*hjup*not_candidate],data.star_id[index*hjup*not_candidate],s=data.pl_radj[index*hjup*not_candidate]**2.*ps, alpha=1, color='C0', edgecolor='none')
        # ax1.scatter(data.pl_orbper[index*wjup*not_candidate],data.star_id[index*wjup*not_candidate],s=data.pl_radj[index*wjup*not_candidate]**2.*ps, alpha=1, color='C1', edgecolor='none')
        # ax1.scatter(data.pl_orbper[index*hjup*not_candidate],data.star_id[index*hjup*not_candidate],s=data.pl_radj[index*hjup*not_candidate]**2.*ps, alpha=1, color='C0', edgecolor='none')
        # ax1.scatter(data.pl_orbper[index*wjup*not_candidate],data.star_id[index*wjup*not_candidate],s=data.pl_radj[index*wjup*not_candidate]**2.*ps, alpha=1, color='C1', edgecolor='none')
        # ax1.scatter(data.pl_orbper[index],data.star_id[index],s=data.pl_radj[index]**2.*ps,  edgecolor='0.5', facecolor='none')
        ax1.plot(data.pl_orbper[index],data.star_id[index],linestyle='dotted', color='0.8', zorder=0, linewidth=0.75)

    small_mask = np.logical_and(small, not_candidate)
    ax1.scatter(data.pl_orbper[small_mask],data.star_id[small_mask],s=data.pl_radj[small_mask]**2.*ps, alpha=1, color='0.4', edgecolor='none')
    small_mask = np.logical_and(small, candidate)
    ax1.scatter(data.pl_orbper[small_mask],data.star_id[small_mask],s=data.pl_radj[small_mask]**2.*ps, alpha=0.6, color='0.4', edgecolor='none')
    hjup_mask = np.logical_and(hjup, not_candidate)
    ax1.scatter(data.pl_orbper[hjup_mask],data.star_id[hjup_mask],s=data.pl_radj[hjup_mask]**2.*ps, alpha=1, color='C1', edgecolor='none')
    hjup_mask = np.logical_and(hjup, candidate)
    ax1.scatter(data.pl_orbper[hjup_mask],data.star_id[hjup_mask],s=data.pl_radj[hjup_mask]**2.*ps, alpha=0.6, color='C1', edgecolor='none')
    wjup_mask = np.logical_and(wjup, not_candidate)
    ax1.scatter(data.pl_orbper[wjup_mask],data.star_id[wjup_mask],s=data.pl_radj[wjup_mask]**2.*ps, alpha=1, color='C0', edgecolor='none')
    wjup_mask = np.logical_and(wjup, candidate)
    ax1.scatter(data.pl_orbper[wjup_mask],data.star_id[wjup_mask],s=data.pl_radj[wjup_mask]**2.*ps, alpha=0.6, color='C0', edgecolor='none')
    # ax1.scatter(data.pl_orbper[index],data.star_id[index],s=data.pl_radj[index]**2.*ps,  edgecolor='0.5', facecolor='none')
    # ax1.plot(data.pl_orbper[index],data.star_id[index],linestyle='dotted', color='0.8', zorder=0, linewidth=0.85)
        
    ax1.scatter(np.zeros(nsys)+0.5, range(nsys), s=rad**2.*ps, edgecolor='none', facecolor=newcmap(norm(teff)),zorder=0)
    ax1.scatter(np.zeros(nsys)+0.5, range(nsys), s=20, facecolor='white', marker='*',zorder=10) 
    # ax1.scatter(data.pl_orbper[hjup],data.star_id[hjup],s=data.pl_radj[hjup]**2.*ps, edgecolor='#f03D2B', facecolor='none')
    # ax1.scatter(data.pl_orbper[wjup],data.star_id[wjup],s=data.pl_radj[wjup]**2.*ps, edgecolor='#1f77b4', facecolor='none')
    ax1.scatter(np.zeros(3)+110,np.arange(1,4),s=np.array([0.2, 0.4, 1.0])**2.*ps,c='k', edgecolor='none')
    ax1.set_xscale('log')
    ax1.annotate("$0.2\,\mathrm{R}_\mathrm{J}$",[45,1.15], fontsize=8)
    ax1.annotate("$0.4\,\mathrm{R}_\mathrm{J}$",[45,2.15], fontsize=8)
    ax1.annotate("$1.0\,\mathrm{R}_\mathrm{J}$",[45,3.15], fontsize=8)

    #labels = ['WASP-47', 'Kepler-730', 'WASP-132','TOI-1130', 'TOI-2494', 'TOI-2000', 'Kepler-487', 'Kepler-89', 'V1298 Tau','TOI-1692', 'Kepler-46', 'TOI-216', 'NGTS-11', 'TOI-1670','K2-290', 'TOI-2525', 'Kepler-117', 'Kepler-148', 'TOI-201', 'Kepler-30', 'Kepler-418']
    labels = list(starfile["hostname"])
    yrange = np.arange(0,nsys)
    ax1.set_yticks(yrange)
    ax1.set_yticklabels(labels, fontsize=8)
    ax1.set_xticks([1,10,100])
    ax1.set_xticklabels(['1','10','100'], fontsize='x-small')
    ax1.get_yticklabels()[6].set_color("#EC2974")
    #ax1.get_yticklabels()[5].set_color("blue")
    ax1.set_xlim([0.3, 200])
    ax1.set_ylim([nsys,-1])
    ax1.set_xlabel("Period (day)", fontsize='small')
    
    gradient = np.linspace(0, 1, 257)
    gradient = np.vstack((gradient, gradient))
    dt = (tmax-tmin)/256.
    ax2 =  plt.subplot(gs1[0,:])
    ax2.imshow(gradient,aspect='auto', cmap=newcmap)
    
    ax2.xaxis.tick_top()
    teffarr = np.array([4000, 5000, 6000, 7000])
    newticklocation = (teffarr-tmin)/dt
    ax2.set_xticks(newticklocation)
    ax2.set_xticklabels(teffarr, fontsize='xx-small')
    ax2.text(0.5,1.2, "$T_{\mathrm{eff},\!\star}$ (K)", verticalalignment='bottom',horizontalalignment='center', transform=ax2.transAxes, fontsize='small')
    #ax2.set_ylabel("$T_{eff}$ [K]", fontsize=8)
    ax2.set_yticklabels([])
    ax2.set_yticks([])
    ax2.tick_params(axis="x",which="both",direction="in")
    # plt.tight_layout()


    plt.savefig("../plots/family_portrait.pdf",bbox_inches='tight', pad_inches=0.01)
    #plt.tight_layout()
    #plt.show()
    return

if __name__=='__main__':
    main()
